
name: "Begin new release"
run-name: "Create a new release branch forking develop"

on:
  push:
    branches:
      - develop
  workflow_dispatch:
    inputs:
      semanticReleaseOpts:
        description: 'Semantic release options'
        required: true
        default: ''
        type: choice
        options:
          - ''
          - '--loglevel=verbose'

permissions:
  contents: read # for checkout

jobs:

  begin_release:
    name: "Begin next release"
    if: ${{ github.ref_name == 'develop' && github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: debug
        run: printenv; git remote -v; git status;

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Install dependencies
        run: npm install -g semantic-release @semantic-release/github @semantic-release/git @semantic-release/changelog @semantic-release/exec @saithodev/semantic-release-backmerge

      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures

      - name: Create the release branch
        run: |
          git pull
          semantic-release --dry-run --no-ci ${{ inputs.semanticReleaseOpts }}
          NEXT_VERSION=$(grep -Po 'Version:([ ]*)?(.*)' "style.css" | tr -s ' ' | cut -d' ' -f2)
          git checkout -b "release-${NEXT_VERSION}"
          sed -i "s/Version: .*/Version: release-${NEXT_VERSION}/" style.css
          git add style.css
          NEED_COMMIT=$(git diff --name-status --cached --exit-code 1>/dev/null; echo $?;)
          if [[ $NEED_COMMIT == 1 ]]
          then
            git commit -m "ci(develop): preparing release branch release-${NEXT_VERSION}"
          fi
          git push origin release-${NEXT_VERSION}
